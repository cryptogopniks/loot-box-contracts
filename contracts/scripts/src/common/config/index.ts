import { ChainConfig } from "../../common/interfaces";
import { $, toJson } from "./config-utils";
import * as PlatformTypes from "../codegen/Platform.types";

export type NetworkName = "STARGAZE";

export type Wasm = "platform.wasm";

export const ADDRESS = {
  ADMIN: "kujira1f37v0rdvrred27tlqqcpkrqpzfv6ddr2c3t8y8",
  WORKER: "kujira1hvp3q00ypzrurd46h7c7c3hu86tx9uf84up6a2",
  LIQUIDATION_WORKER: "kujira1gfmrf0wgjtmk6mylnke6v8ma523cguyjlzsrzu",
  ORACLE_WORKER: "kujira17su0549xmtty7hfgf72dwh0nmp5rk9m58hpds3",
};

/**
 * This config is used to generate `config.json` used by any script (ts, js, bash).
 * It must be filled manually. If any contract must be added it's required to include
 * it with default parameters - code is 0, address is "".
 * This config uses logs.json generated by local-interchaintest to update endpoints
 * in cofig.json.
 */
export const CHAIN_CONFIG: ChainConfig = {
  CHAINS: [
    {
      NAME: "stargaze",
      PREFIX: "stars",
      OPTIONS: [
        {
          TYPE: "test",
          DENOM: "ustars",
          CHAIN_ID: "elgafar-1",
          RPC_LIST: ["https://rpc.elgafar-1.stargaze-apis.com:443"],
          GAS_PRICE_AMOUNT: 0.04,
          STORE_CODE_GAS_MULTIPLIER: 22,
          CONTRACTS: [
            {
              WASM: "platform.wasm",
              LABEL: "platform",
              INIT_MSG: toJson<PlatformTypes.InstantiateMsg>({}),
              MIGRATE_MSG: toJson<PlatformTypes.MigrateMsg>({
                version: "1.0.0",
              }),
              UPDATE_MSG: toJson<PlatformTypes.ExecuteMsg>({
                update_config: {},
              }),
              CODE: 0,
              ADDRESS: "",
            },
          ],
          IBC: [],
        },
        {
          TYPE: "main",
          DENOM: "ustars",
          CHAIN_ID: "stargaze-1",
          RPC_LIST: ["https://stargaze-rpc.reece.sh:443"],
          GAS_PRICE_AMOUNT: 1.1,
          STORE_CODE_GAS_MULTIPLIER: 19.5,
          CONTRACTS: [
            {
              WASM: "platform.wasm",
              LABEL: "platform",
              INIT_MSG: toJson<PlatformTypes.InstantiateMsg>({}),
              MIGRATE_MSG: toJson<PlatformTypes.MigrateMsg>({
                version: "1.0.0",
              }),
              UPDATE_MSG: toJson({}),
              CODE: 0,
              ADDRESS: "",
            },
          ],
          IBC: [],
        },
      ],
    },
  ],
};
