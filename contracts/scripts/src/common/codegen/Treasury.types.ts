/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.9.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  platform_code_id?: number | null;
  worker?: string | null;
}
export type ExecuteMsg = {
  increase_balance: {};
} | {
  send: {
    amount: Uint128;
    denom: string;
    recipient: string;
  };
} | {
  increase_rewards: {
    amount: Uint128;
    denom: string;
  };
} | {
  send_nft: {
    collection: string;
    recipient: string;
    token_id: string;
  };
} | {
  accept_admin_role: {};
} | {
  create_platform: {
    box_price: Uint128;
    denom: string;
    distribution?: WeightInfo[] | null;
  };
} | {
  add_platform: {
    address: string;
  };
} | {
  remove_platform: {
    address: string;
  };
} | {
  deposit: {};
} | {
  deposit_nft: {
    nft_info_list: NftInfoForString[];
  };
} | {
  update_config: {
    admin?: string | null;
    platform_code_id?: number | null;
    worker?: string | null;
  };
} | {
  lock: {};
} | {
  unlock: {};
} | {
  withdraw: {
    amount: Uint128;
    denom: string;
  };
} | {
  withdraw_nft: {
    nft_info_list: NftInfoForString[];
  };
} | {
  update_nft_price: {
    nft_info_list: NftInfoForString[];
  };
};
export type Uint128 = string;
export type Decimal = string;
export interface WeightInfo {
  box_rewards: Uint128;
  weight: Decimal;
}
export interface NftInfoForString {
  collection: string;
  price_option: [Uint128, string][];
  token_id: string;
}
export type QueryMsg = {
  query_config: {};
} | {
  query_balance: {};
} | {
  query_platform_list: {};
} | {
  query_removed_platform_list: {};
};
export interface MigrateMsg {
  version: string;
}
export type Addr = string;
export interface Balance {
  deposited: [Uint128, string][];
  nft_pool: NftInfoForAddr[];
  pool: [Uint128, string][];
  rewards: [Uint128, string][];
}
export interface NftInfoForAddr {
  collection: Addr;
  price_option: [Uint128, string][];
  token_id: string;
}
export interface Config {
  admin: Addr;
  denom_list: string[];
  platform_code_id?: number | null;
  worker?: Addr | null;
}
export type ArrayOfAddr = Addr[];