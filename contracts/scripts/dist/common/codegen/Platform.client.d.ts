/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.9.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { Uint128, NoisCallback, BoxList, Config } from "./Platform.types";
export interface PlatformReadOnlyInterface {
    contractAddress: string;
    queryConfig: () => Promise<Config>;
    queryBoxList: () => Promise<BoxList>;
}
export declare class PlatformQueryClient implements PlatformReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    queryConfig: () => Promise<Config>;
    queryBoxList: () => Promise<BoxList>;
}
export interface PlatformInterface extends PlatformReadOnlyInterface {
    contractAddress: string;
    sender: string;
    noisReceive: ({ callback }: {
        callback: NoisCallback;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    acceptAdminRole: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    updateConfig: ({ admin, boxListLength, boxPrice, priceAndWeightList, proxy, worker }: {
        admin?: string;
        boxListLength?: number;
        boxPrice?: Uint128;
        priceAndWeightList?: Uint128[][][];
        proxy?: string;
        worker?: string;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    requestBoxList: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class PlatformClient extends PlatformQueryClient implements PlatformInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    noisReceive: ({ callback }: {
        callback: NoisCallback;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    acceptAdminRole: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    updateConfig: ({ admin, boxListLength, boxPrice, priceAndWeightList, proxy, worker }: {
        admin?: string | undefined;
        boxListLength?: number | undefined;
        boxPrice?: string | undefined;
        priceAndWeightList?: string[][][] | undefined;
        proxy?: string | undefined;
        worker?: string | undefined;
    }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
    requestBoxList: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
